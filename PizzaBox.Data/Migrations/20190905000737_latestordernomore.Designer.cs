// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaBox.Data;

namespace PizzaBox.Data.Migrations
{
    [DbContext(typeof(ProjectZeroTwoDBContext))]
    [Migration("20190905000737_latestordernomore")]
    partial class latestordernomore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaBox.Domain.Abstracts.AItem", b =>
                {
                    b.Property<int>("AItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.HasKey("AItemId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AItems");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AItem");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine")
                        .IsRequired();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<int>("StoreId");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.AddressedOrder", b =>
                {
                    b.Property<int>("AddressedOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("FinalPrice");

                    b.Property<int?>("OrderHistoryId");

                    b.Property<int?>("StoreId");

                    b.Property<int>("UserId");

                    b.HasKey("AddressedOrderId");

                    b.HasIndex("AddressId");

                    b.HasIndex("OrderHistoryId");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("AddressedOrders");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InventoryItemId");

                    b.Property<int>("StoreId");

                    b.HasKey("InventoryId");

                    b.HasIndex("InventoryItemId");

                    b.HasIndex("StoreId")
                        .IsUnique();

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.InventoryItem", b =>
                {
                    b.Property<int>("InventoryItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int?>("InventoryId");

                    b.Property<int?>("ItemAItemId");

                    b.HasKey("InventoryItemId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("ItemAItemId");

                    b.ToTable("InventoryItem");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Name", b =>
                {
                    b.Property<int>("NameId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("First")
                        .IsRequired();

                    b.Property<string>("Last")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.HasKey("NameId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Name");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressedOrderId");

                    b.HasKey("OrderId");

                    b.HasIndex("AddressedOrderId")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.OrderHistory", b =>
                {
                    b.Property<int>("OrderHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StoreId");

                    b.Property<int>("UserId");

                    b.HasKey("OrderHistoryId");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderHistory");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Pizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CrustAItemId");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int?>("SizeAItemId");

                    b.HasKey("PizzaId");

                    b.HasIndex("CrustAItemId");

                    b.HasIndex("SizeAItemId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<int?>("LocationAddressId");

                    b.HasKey("StoreId");

                    b.HasIndex("LocationAddressId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomPizzaPizzaId");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.HasIndex("CustomPizzaPizzaId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Crust", b =>
                {
                    b.HasBaseType("PizzaBox.Domain.Abstracts.AItem");

                    b.Property<int>("CrustId");

                    b.HasDiscriminator().HasValue("Crust");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Size", b =>
                {
                    b.HasBaseType("PizzaBox.Domain.Abstracts.AItem");

                    b.Property<int>("SizeId");

                    b.HasDiscriminator().HasValue("Size");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Topping", b =>
                {
                    b.HasBaseType("PizzaBox.Domain.Abstracts.AItem");

                    b.Property<int?>("PizzaId");

                    b.Property<int>("ToppingId");

                    b.HasIndex("PizzaId");

                    b.HasDiscriminator().HasValue("Topping");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.AddressedOrder", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("PizzaBox.Domain.Models.OrderHistory", "OrderHistory")
                        .WithMany("Orders")
                        .HasForeignKey("OrderHistoryId");

                    b.HasOne("PizzaBox.Domain.Models.Store")
                        .WithMany("StoreOrderHistory")
                        .HasForeignKey("StoreId");

                    b.HasOne("PizzaBox.Domain.Models.User", "OrderUser")
                        .WithMany("UserOrderHistory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Inventory", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.InventoryItem")
                        .WithMany("Inventories")
                        .HasForeignKey("InventoryItemId");

                    b.HasOne("PizzaBox.Domain.Models.Store", "Store")
                        .WithOne("Inventory")
                        .HasForeignKey("PizzaBox.Domain.Models.Inventory", "StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.InventoryItem", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Inventory")
                        .WithMany("Items")
                        .HasForeignKey("InventoryId");

                    b.HasOne("PizzaBox.Domain.Abstracts.AItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemAItemId");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Name", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.User", "User")
                        .WithOne("Name")
                        .HasForeignKey("PizzaBox.Domain.Models.Name", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Order", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.AddressedOrder", "AddressedOrder")
                        .WithOne("Order")
                        .HasForeignKey("PizzaBox.Domain.Models.Order", "AddressedOrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.OrderHistory", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PizzaBox.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Pizza", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Crust", "Crust")
                        .WithMany()
                        .HasForeignKey("CrustAItemId");

                    b.HasOne("PizzaBox.Domain.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeAItemId");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Store", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Address", "Location")
                        .WithMany()
                        .HasForeignKey("LocationAddressId");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.User", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Pizza", "CustomPizza")
                        .WithMany()
                        .HasForeignKey("CustomPizzaPizzaId");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Topping", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Pizza")
                        .WithMany("Toppings")
                        .HasForeignKey("PizzaId");
                });
#pragma warning restore 612, 618
        }
    }
}
